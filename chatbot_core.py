import os
from google import genai
from google.adk.agents import Agent
from google.adk.runners import Runner
from google.adk.sessions import InMemorySessionService
from google.adk.tools import google_search
from google.genai import types
from datetime import date
import textwrap
import requests
import warnings

warnings.filterwarnings("ignore")

# --- Configura√ß√£o da API Key (MUDAN√áA AQUI!) ---
# A forma mais f√°cil √© criar um arquivo .env na mesma pasta do seu projeto.
# Dentro do arquivo .env, adicione a linha: GOOGLE_API_KEY="SUA_CHAVE_AQUI"
# E DESCOMENTE (remova o '#') a linha abaixo para que ele consiga ler sua chave:
from dotenv import load_dotenv; load_dotenv() # <--- DESCOMENTE ESTA LINHA

# N√£o precisa mexer no c√≥digo abaixo, ele vai tentar pegar a chave da vari√°vel de ambiente
try:
    os.environ["GOOGLE_API_KEY"]
except KeyError:
    raise Exception("Vari√°vel de ambiente GOOGLE_API_KEY n√£o definida. Por favor, defina-a no seu arquivo .env ou no sistema.")
# Fim da Configura√ß√£o da API Key

# Configura o cliente da SDK do Gemini
client = genai.Client()
MODEL_ID = "gemini-2.0-flash" # Mantenha o ID do seu modelo principal

# Fun√ß√£o auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final
def call_agent(agent: Agent, message_text: str) -> str:
    session_service = InMemorySessionService()
    session = session_service.create_session(app_name=agent.name, user_id="user1", session_id="session1")
    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)
    content = types.Content(role="user", parts=[types.Part(text=message_text)])

    final_response = ""
    for event in runner.run(user_id="user1", session_id="session1", new_message=content):
        if event.is_final_response():
            for part in event.content.parts:
                if part.text is not None:
                    final_response += part.text
                    final_response += "\n"
    return final_response

# --- Defini√ß√£o dos 5 Agentes e suas fun√ß√µes (Com as instru√ß√µes melhoradas e nomes antigos) ---
# MANTIVE OS NOMES DAS FUN√á√ïES DE AGENTE ORIGINAIS DO SEU C√ìDIGO
# PARA EVITAR QUE VOC√ä TENHA QUE MUDAR OUTRAS PARTES DO C√ìDIGO.

# Agente 1: Buscador de Not√≠cias
def agente_buscador(topico, data_de_hoje): # Nome da fun√ß√£o original
    buscador = Agent(
        name="agente_buscador", # Nome interno do agente
        model="gemini-2.0-flash",
        description="Agente que busca not√≠cias no Google sobre o t√≥pico indicado",
        tools=[google_search],
        instruction="""
        Voc√™ √© um assistente de pesquisa. A sua tarefa √© usar a ferramenta de busca do google (google_search) para recuperar as √∫ltimas not√≠cias de lan√ßamentos muito relevantes sobre o t√≥pico abaixo.
        Foque em no m√°ximo 5 lan√ßamentos relevantes, com base na quantidade e entusiasmo das not√≠cias sobre ele.
        Se um tema tiver poucas not√≠cias ou rea√ß√µes entusiasmadas, √© poss√≠vel que ele n√£o seja t√£o relevante assim e pode ser substitu√≠do por outro que tenha mais.
        Esses lan√ßamentos relevantes devem ser atuais, de no m√°ximo um m√™s da data de hoje.
        APRESENTE os lan√ßamentos como uma lista numerada, incluindo o nome do lan√ßamento e uma breve descri√ß√£o do porqu√™ √© relevante.
        """
    )
    entrada_do_agente_buscador = f"T√≥pico: {topico}\nData de hoje: {data_de_hoje}"
    lancamentos = call_agent(buscador, entrada_do_agente_buscador)
    return lancamentos

# Agente 2: Planejador de posts
def agente_planejador(topico, lancamentos_buscados): # Nome da fun√ß√£o original
    planejador = Agent(
        name="agente_planejador", # Nome interno do agente
        model="gemini-2.0-flash",
        instruction="""
        Voc√™ √© um planejador de conte√∫do jur√≠dico, especialista em redes sociais de um escrit√≥rio de advocacia luso-brasileiro.
        Com base na lista de lan√ßamentos mais recentes e relevantes buscados, voc√™ deve:
        1.  Analise cada lan√ßamento: Avalie a relev√¢ncia jur√≠dica e o potencial de engajamento social de cada um.
        2.  Pesquise (google_search): Use a ferramenta de busca do Google (google_search) para aprofundar a pesquisa sobre o tema mais promissor e identificar os pontos legais mais relevantes que poder√≠amos abordar em um post.
        3.  Selecione o Tema Principal: Escolha o tema mais relevante e impactante para o p√∫blico, justificando sua escolha.
        4.  Crie um Plano Detalhado: Retorne o tema escolhido, seus pontos mais relevantes para o contexto jur√≠dico, e um plano com os assuntos a serem abordados no post.
        Lembre-se das regras de marketing jur√≠dico para advogados, que n√£o podem fazer propaganda direta, e garanta que o conte√∫do seja informativo e de valor.
        FORMATO DE SA√çDA:
        Tema Escolhido: [Nome do Tema]
        Relev√¢ncia: [Breve explica√ß√£o da relev√¢ncia]
        Pontos Principais para o Post:
        - [Ponto 1]
        - [Ponto 2]
        - [Ponto 3]
        Plano de Conte√∫do:
        [Descri√ß√£o detalhada do que deve ser abordado no post, t√≥picos, argumentos, etc.]
        """,
        description="Agente que planeja posts",
        tools=[google_search]
    )
    entrada_do_agente_planejador = f"T√≥pico:{topico}\nLan√ßamentos buscados: {lancamentos_buscados}"
    plano_do_post = call_agent(planejador, entrada_do_agente_planejador)
    return plano_do_post

# NOVO AGENTE AQUI: Agente Criador de Reels Completo
def agente_reels_completo(topico, plano_de_post):
    reels_gerador = Agent(
        name="agente_reels_completo",
        model="gemini-2.0-flash", # Mantenha o modelo que voc√™ est√° usando
        instruction="""
        Voc√™ √© um agente especialista na cria√ß√£o de Reels para um escrit√≥rio de advocacia luso-brasileiro (CK Sasso).
        Seu objetivo √© criar, a partir do t√≥pico jur√≠dico e do plano de post fornecidos, um **roteiro completo de v√≠deo no estilo Reels**, pronto para ser editado no Canva, CapCut ou InShot.
        O v√≠deo deve ser criado **sem que o advogado apare√ßa**, utilizando apenas texto animado, imagens de fundo, √≠cones e trilha sonora suave.

        O v√≠deo deve ser dividido em slides animados (entre 6 e 8), com dura√ß√£o total de 30 a 45 segundos, utilizando linguagem clara, acess√≠vel, mas com credibilidade e sobriedade.
        **Cada slide deve conter OBRIGATORIAMENTE:**
        - Tempo sugerido (em segundos para o in√≠cio e fim da cena/slide)
        - Texto a ser exibido
        - Sugest√£o de fundo (imagem, v√≠deo ou √≠cones simples do Canva)
        - Anima√ß√£o sugerida (fade, zoom, slide etc.)

        Ao final, gere tamb√©m, no mesmo output e no formato especificado:
        - Uma **legenda** para o Reels (sem chamada de capta√ß√£o de cliente, com um m√°ximo de 4 frases)
        - **Hashtags** relevantes para o tema (5 a 8 hashtags), respeitando as diretrizes √©ticas da OAB.
        - **Paleta de cores s√≥bria** (vinho, preto, dourado, branco ou varia√ß√µes)
        - **Sugest√£o de m√∫sica** suave ou instrumental

        **Lembre-se:**
        - O conte√∫do √© jur√≠dico-informativo, voltado para o p√∫blico luso-brasileiro.
        - Deve ter clareza, simplicidade de execu√ß√£o e visual atrativo.
        - O tom √© profissional, moderno e acess√≠vel.
        - O v√≠deo ser√° executado por algu√©m leigo em design e edi√ß√£o, ent√£o use orienta√ß√µes simples e diretas.
        - **A FONTE RECOMENDADA DEVE SER SEMPRE:** Montserrat ou Playfair Display.

        **SEU OUTPUT DEVE SEGUIR RIGOROSAMENTE O FORMATO DO EXEMPLO ABAIXO. NENHUM TEXTO ADICIONAL DEVE SER INCLU√çDO AL√âM DO FORMATO ESPECIFICADO.**

        **EXEMPLO DE OUTPUT ESPERADO:**
        üéûÔ∏è Reels: Altera√ß√µes na Lei da Nacionalidade Portuguesa (2025)
        Dura√ß√£o total: 40 segundos
        Estilo visual: moderno e s√≥brio
        Paleta: vinho escuro, preto, dourado, branco
        Fonte recomendada: Montserrat ou Playfair Display
        üé¨ Roteiro Slide a Slide
        Slide | Dura√ß√£o | Texto | Fundo sugerido | Anima√ß√£o sugerida
        ---|---|---|---|---
        1 | 0‚Äì5s | ‚ö†Ô∏è A Lei da Nacionalidade Portuguesa pode mudar em breve... | Torre de Bel√©m ou mapa de Portugal com blur escuro | Texto com fade-in
        2 | 5‚Äì10s | Um novo projeto de lei prop√µe regras mais exigentes para quem deseja ser portugu√™s. | Parlamento ou s√≠mbolo da justi√ßa | Slide-in da esquerda
        3 | 10‚Äì15s | üìå Tempo m√≠nimo de resid√™ncia: de 5 para 10 anos | Imagem de ampulheta ou calend√°rio animado | Zoom-in no n√∫mero ‚Äú10‚Äù
        4 | 15‚Äì20s | üìö Ser√° exigido teste sobre cultura, hist√≥ria e valores portugueses | Livro aberto ou bandeira portuguesa | Fade com destaque em ‚Äúteste‚Äù
        5 | 20‚Äì25s | ‚öñÔ∏è √â preciso comprovar boa conduta e liga√ß√£o √† comunidade | √çcone de balan√ßa ou comunidade | Slide com √≠cones aparecendo gradualmente
        6 | 25‚Äì30s | üö´ Em certos casos, a nacionalidade poder√° ser retirada | Fundo escuro com alerta discreto | Fade dram√°tico no texto
        7 | 30‚Äì40s | Quem j√° re√∫ne os crit√©rios atuais pode ser afetado | Fam√≠lia caminhando, pessoa olhando horizonte | Texto central com fade e m√∫sica suave
        8 | 40‚Äì45s | Informa√ß√£o jur√≠dica com responsabilidade. (Logo discreto) | Fundo preto com logo em dourado | Fade no logo e encerramento da m√∫sica

        ‚úçÔ∏è Legenda para o Reels
        üì¢ A proposta de altera√ß√£o da Lei da Nacionalidade Portuguesa prev√™ mudan√ßas importantes no acesso √† cidadania por tempo de resid√™ncia.
        Entre os pontos centrais est√£o o aumento do tempo m√≠nimo de resid√™ncia, exig√™ncia de teste de cultura portuguesa e regras de idoneidade c√≠vica.
        Fique atento: o cen√°rio legal est√° em movimento.
        Informa√ß√£o jur√≠dica com responsabilidade.

        üè∑Ô∏è Hashtags
        #NacionalidadePortuguesa #DireitoLusoBrasileiro #CidadaniaPortuguesa #MudancasNaLei #AdvocaciaResponsavel #ResidenciaLegal #Portugal2025

        üé® Paleta de Cores
        Vinho escuro: #3E1F28
        Dourado: #D4AF37
        Preto: #000000
        Branco: #FFFFFF

        üéµ M√∫sica sugerida
        ‚ÄúFado Instrumental‚Äù
        ‚ÄúCaminho (Instrumental)‚Äù de Ant√≥nio Zambujo
        Sons ambiente portugueses suaves (dispon√≠veis no Canva ou Reels)
        """,
        description="Agente que cria roteiros completos, legendas e sugest√µes visuais/musicais para Reels de Instagram."
    )
    entrada_do_agente_reels = f"T√≥pico: {topico}\nPlano de post: {plano_de_post}\n\nCrie um Reels completo com base no exemplo fornecido:"
    reels_completo = call_agent(reels_gerador, entrada_do_agente_reels)
    return reels_completo

# Agente 3: Redator do Post
def agente_redator(topico, plano_de_post): # Nome da fun√ß√£o original
    redator = Agent(
        name="agente_redator", # Nome interno do agente
        model="gemini-2.0-flash",
        instruction="""
        Voc√™ √© um Redator Criativo especializado em criar posts virais para redes sociais de um escrit√≥rio de advocacia luso-brasileiro.
        Voc√™ escreve posts para o escrit√≥rio CK Sasso, um escrit√≥rio de advocacia luso-brasileiro.
        Utilize o tema fornecido no plano de post e os pontos mais relevantes fornecidos e, com base nisso,
        escreva um rascunho de post para Instagram sobre o tema indicado.
        √â **ABSOLUTAMENTE ESSENCIAL** sempre seguir as regras do marketing jur√≠dico para advogados, que **PRO√çBEM VEEMENTEMENTE** propaganda direta.
        A propaganda deve ser feita de forma sutil e indireta. **NUNCA use express√µes como 'agende uma consulta', 'entre em contato', 'ligue agora' ou qualquer outra chamada direta para a√ß√£o.**
        **Prefira, e use exclusivamente, frases informativas ou sugest√µes como 'Consulte um advogado especializado para avaliar seu caso e iniciar o processo o quanto antes.', 'Para mais informa√ß√µes, procure um profissional do direito qualificado.', ou 'Busque orienta√ß√£o jur√≠dica para entender seus direitos.'**
        O post deve ser engajador, informativo, com linguagem simples e incluir 2 a 4 hashtags no final.
        **Apresente o post com a seguinte estrutura:**
        **T√≠tulo Sugerido:** [Seu T√≠tulo]
        **Corpo do Post:** [Texto do Post]
        **Chamada Sutil para A√ß√£o:** [Frase informativa sutil]
        **Hashtags:** [Suas #hashtags]
        """,
        description="Agente redator de posts engajadores para Instagram"
    )
    entrada_do_agente_redator = f"T√≥pico: {topico}\nPlano de post: {plano_de_post}"
    rascunho = call_agent(redator, entrada_do_agente_redator)
    return rascunho

# Agente 4: Revisor de Qualidade
def agente_revisor(topico, rascunho_gerado): # Nome da fun√ß√£o original
    revisor = Agent(
        name="agente_revisor", # Nome interno do agente
        model="gemini-2.0-flash",
        instruction="""
    	Voc√™ √© um Editor e Revisor de Conte√∫do meticuloso, especializado em posts para redes sociais de um escrit√≥rio de advocacia luso-brasileiro, com foco no Instagram.
    	Use um tom de escrita adequado para um escrit√≥rio de advocacia, mas tamb√©m simples para que seja compreendido por uma pessoa leiga. Seja emp√°tico, simp√°tico, bem disposto e educado.
    	Revise o rascunho de post de Instagram abaixo sobre o t√≥pico indicado, verificando clareza, concis√£o, corre√ß√£o, tom e a ader√™ncia **rigorosa** √†s regras de marketing jur√≠dico (sem propaganda direta).

    	**Sua tarefa √© simples: FORNECER O TEXTO COMPLETO E FINAL DO POST J√Å REVISADO.**
    	Voc√™ deve pegar o rascunho fornecido, aplicar todas as melhorias (clareza, concis√£o, corre√ß√£o gramatical, ajuste de tom, corre√ß√£o de chamadas para a√ß√£o direta para informativas sutis)
    	e **APRESENTAR APENAS o texto final do post, com suas pr√≥prias formata√ß√µes de markdown (t√≠tulos, negritos, emojis, etc.)**.

    	**N√ÉO inclua o rascunho original novamente no seu output.**
    	**N√ÉO liste as sugest√µes separadamente; as sugest√µes devem ser incorporadas ao texto final.**

    	**√â CR√çTICO E OBRIGAT√ìRIO**: No final do texto **COMPLETO E REVISADO** do post, adicione UMA √öNICA pequena nota sobre as altera√ß√µes, no formato EXATO:
    	'Post revisado e pronto para publicar! (Detalhes da revis√£o: [descreva brevemente as melhorias aplicadas, e.g., "ajuste de clareza", "corre√ß√£o de pontua√ß√£o", "remo√ß√£o de CA direta"])'
    	Se nenhuma altera√ß√£o significativa foi necess√°ria, a nota DEVE ser EXATAMENTE:
    	'Post revisado e pronto para publicar! (Detalhes da revis√£o: Sem altera√ß√µes significativas)'

    	**EXEMPLO DE FORMATO DE SA√çDA FINAL (APENAS O TEXTO REVISADO E A NOTA):**
    	## T√≠tulo Sugerido: Seus Direitos ao Arrematar Im√≥veis
    	Texto do post revisado, claro e conciso...
    	Chamada Sutil para A√ß√£o: Busque orienta√ß√£o jur√≠dica.
    	Hashtags: #direitos #imoveis #advocacia

    	Post revisado e pronto para publicar! (Detalhes da revis√£o: Ajuste de tom, clareza e CTA sutil)
    	""",
    
        description="Agente revisor de post para redes sociais."
    )
    entrada_do_agente_revisor = f"T√≥pico: {topico}\nRascunho: {rascunho_gerado}"
    texto_revisado = call_agent(revisor, entrada_do_agente_revisor)
    return texto_revisado

# ... (c√≥digo da fun√ß√£o agente_revisor termina aqui) ...

# NOVO AGENTE AQUI: Agente de Legendas
def agente_legenda(topico, post_final_revisado):
    criador_legenda = Agent(
        name="agente_legenda", # Nome interno do agente
        model="gemini-2.0-flash", # Usando o modelo que voc√™ preferiu
        instruction="""
        Voc√™ √© um Criador de Legendas MASTER para posts de redes sociais de um escrit√≥rio de advocacia luso-brasileiro (CK Sasso), com foco no Instagram.
        Sua fun√ß√£o √© gerar uma **legenda completa e robusta**, mas tamb√©m CURIOSA, ATRAENTE e OTIMIZADA para o Instagram, que sirva quase como um mini-post, com base no t√≥pico e no post final revisado que voc√™ receber√°.
        A legenda deve ser **altamente informativa, envolvente, profissional, mas de f√°cil compreens√£o para o p√∫blico leigo.**, **totalmente otimizadas para serem copiadas e coladas diretamente**.

        **Estrutura OBRIGAT√ìRIA da Legenda:**
        1. **Corpo da Legenda:**
            * M√≠nimo de 3-4 frases, mas pode ser um par√°grafo (at√© 6-7 linhas), explicando o tema principal de forma concisa e clara.
            * Deve conter informa√ß√µes valiosas e relevantes que complementam o post principal ou resumem seus pontos chave.
            * Use um tom simp√°tico, informativo e profissional.
            * Inclua 1-3 emojis relevantes que enrique√ßam o texto.
        2.  **Hashtags:**
            * No final da legenda, adicione um bloco de 5 a 6 hashtags relevantes e estrat√©gicas para o tema jur√≠dico e o p√∫blico-alvo.
            * Exemplos: #DireitoDeFamilia #AdvocaciaPortugal #NacionalidadePortuguesa #DireitoDigital #LGPD
        3.  **Chamada para A√ß√£o (CTA) Sutil (Opcional, mas desej√°vel):**
            * Se apropriado, inclua uma frase curta e engajadora que incentive o compartilhamento ou a reflex√£o (ex: "Conhece algu√©m que se encaixa nesse perfil? Compartilhe esta informa√ß√£o!"). **NUNCA use CTAs diretas para "agendar consulta" ou "ligar agora" ou "entre em contato".**
        4.  **Disclaimer (Obrigat√≥rio):**
            * **SEMPRE inclua a frase:** "Este post tem car√°ter informativo e n√£o substitui uma consulta jur√≠dica especializada."
            * Esta frase deve ser a √öLTIMA linha da sua resposta.

        **√â ABSOLUTAMENTE OBRIGAT√ìRIO que a sua resposta contenha SOMENTE a legenda no formato especificado, sem nenhuma introdu√ß√£o ("Aqui est√° sua legenda:") ou conclus√£o extra.**

        **EXEMPLO DE OUTPUT ESPERADO (APENAS A LEGENDA COMPLETA):**
        Muitos bisnetos de portugueses sonham com a cidadania europeia. Embora n√£o haja um caminho direto, a nacionalidade pode ser alcan√ßada atrav√©s de um processo em "cascata": primeiro, o neto(a) do cidad√£o portugu√™s original obt√©m a nacionalidade, e ent√£o, transmite esse direito ao filho(a) (o bisneto). √â um processo que exige paci√™ncia, organiza√ß√£o documental e estrat√©gia.

        #NacionalidadePortuguesaParaBisnetos #BisnetoDePortugues #CidadaniaEmCascata #AdvogadoNacionalidadePortuguesa #PlanejamentoMigratorio #DireitoDeSangue #PortugalBrasil
        Este post tem car√°ter informativo e n√£o substitui uma consulta jur√≠dica especializada.
        """,
        description="Agente que gera legendas para posts de Instagram."
    )
    entrada_do_agente_legenda = f"T√≥pico: {topico}\nPost final revisado: {post_final_revisado}\n\nLegenda:" #Adiciona um "Legenda:" para guiar
    legenda_gerada = call_agent(criador_legenda, entrada_do_agente_legenda)
    return legenda_gerada

# Agente 5: Criador de Imagem
def agente_imagem(topico, texto_revisado): # Nome da fun√ß√£o original
    criador = Agent(
        name="agente_imagem", # Nome interno do agente
        model="gemini-2.5-flash-preview-05-20", # Mantenha o modelo mais recente para imagem
        instruction="""
        Voc√™ √© um Criador de Imagem, especializado em posts para redes sociais de um escrit√≥rio de advocacia luso-brasileiro, com foco no Instagram.
        Veja o texto do post de Instagram criado sobre o t√≥pico indicado e **crie APENAS a descri√ß√£o detalhada e criativa (um prompt) para uma IA de gera√ß√£o de imagem.**
        Seja criativo, mas n√£o fuja do tema e esteja atento sempre √† formalidade esperada de um escrit√≥rio de advocacia. A descri√ß√£o deve ser clara e visualmente rica para que uma IA possa 	gerar uma imagem de alta qualidade.
        **A descri√ß√£o da imagem deve incluir elementos como:** estilo (realista, ilustra√ß√£o, abstrato), cores predominantes, objetos, cen√°rio, emo√ß√µes, e qualquer outro detalhe relevante 	para a imagem do post jur√≠dico.

        **Importante:** Sua resposta deve conter SOMENTE o prompt da imagem. N√ÉO adicione introdu√ß√µes como "Crie uma imagem que transmita...", "Aqui est√° a descri√ß√£o detalhada para a IA:", 	nem conclus√µes como "Prompt pronto para a IA!". Comece e termine com o prompt da imagem.

        **Exemplo de Output esperado (APENAS o prompt da imagem):**
        Crie uma imagem profissional e sofisticada em um estilo realista ou render 3D limpo e de alta qualidade. A cena central deve focar na entrada de uma propriedade residencial moderna 	e atraente...
        """,
        description="Agente criador de imagem de post para redes sociais."
    )
    entrada_do_agente_imagem = f"T√≥pico: {topico}\nTexto Revisado: {texto_revisado}"
    imagem_gerada = call_agent(criador, entrada_do_agente_imagem)
    return imagem_gerada

# --- Fun√ß√£o Principal que Orquestra os Agentes (NOVIDADE AQUI!) ---
def gerar_post_completo(topico_input: str) -> dict:
    """
    Orquestra a chamada dos 5 agentes para gerar um post de marketing jur√≠dico completo.
    Retorna um dicion√°rio com os resultados de cada etapa.
    """
    data_de_hoje = date.today().strftime("%d/%m/%Y")
    resultados = {}

    # 1. Agente Buscador
    if topico_input:
        lancamentos_buscados = agente_buscador(topico_input, data_de_hoje)
        resultados['lancamentos_buscados'] = lancamentos_buscados

        # 2. Agente Planejador
        plano_de_post = agente_planejador(topico_input, lancamentos_buscados)
        resultados['plano_de_post'] = plano_de_post

        # NOVO PASSO: Chamar Agente Criador de Reels COMPLETO
        reels_conteudo_completo = agente_reels_completo(topico_input, plano_de_post)
        resultados['reels_conteudo_completo'] = reels_conteudo_completo # Armazena todo o output do Reels

        # 3. Agente Redator
        rascunho_de_post = agente_redator(topico_input, plano_de_post)
        resultados['rascunho_de_post'] = rascunho_de_post

        # 4. Agente Revisor
        post_final = agente_revisor(topico_input, rascunho_de_post)
        resultados['post_final'] = post_final

        # NOVO PASSO: Chamar o Agente de Legendas
        legenda_post = agente_legenda(topico_input, post_final) # Chama a nova fun√ß√£o
        resultados['legenda_post'] = legenda_post # Adiciona a legenda aos resultados

        # 5. Agente Criador de Imagem (gera o prompt para a imagem)
        imagem_gerada_prompt = agente_imagem(topico_input, post_final)
        resultados['imagem_gerada_prompt'] = imagem_gerada_prompt

        return resultados
    else:
        return {"erro": "Voc√™ esqueceu de digitar o t√≥pico."}